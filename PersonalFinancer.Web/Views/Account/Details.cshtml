@model AccountDetailsViewModel

<div class="row" style="margin-top: 50px;">
	<h1 class="display-6">
		Account: @Model.Name
		<a asp-controller="Account" asp-action="ConfirmDelete" asp-route-id="@Model.Id" class="btn btn-danger">
			Delete Account
		</a>
	</h1>
	<p class="display-4" style="font-size: xx-large;" id="balanceField">Balance: @Model.Balance @Model.CurrencyName</p>
</div>

<div class="row" style="margin-top: 50px;">
	<div class="col-md-12">
		<div class="card">
			<div class="card-header">
				<h6>Transactions</h6>
			</div>
			<table class="table table-hover">
				<thead>
					<tr>
						<th scope="col">Date</th>
						<th scope="col">Category</th>
						<th scope="col">Type</th>
						<th scope="col">Amount</th>
						<th scope="col">Refference</th>
						<th scope="col"></th>
					</tr>
				</thead>
				<tbody id="tableBody">
					@foreach (var transaction in Model.Transactions)
					{
						<tr>
							<td>@transaction.CreatedOn</td>
							<td>@transaction.CategoryName</td>
							<td>@transaction.TransactionType</td>
							<td>@transaction.Amount</td>
							<td>@transaction.Refference</td>
							<td>
								<a asp-controller="Transaction" asp-action="Edit" asp-route-id="@transaction.Id"
							   asp-route-returnUrl="~/Account/Details/@Model.Id" class="btn btn-warning">Edit</a>
								<button class="btn btn-danger" id="@transaction.Id">Delete</button>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		document.getElementById('tableBody').addEventListener('click', async (e) => {
			if (e.target.tagName == 'BUTTON') {
				if (confirm('Are you sure you want to delete this Transaction?')) {
					let transactionId = e.target.id;

					let response = await fetch(
						'@ApiTransactionsUrl' + transactionId,
						{ method: 'DELETE' }
					);

					if (response.status == 204) {
						let transactionRow = e.target.parentElement.parentElement;
						document.getElementById('tableBody').removeChild(transactionRow);

						let transactionAmount = transactionRow.children[3].textContent;
						let transactionType = transactionRow.children[2].textContent;
						let newBalance;
						
						if (transactionType == 'Income') {
							newBalance = @Model.Balance - Number(transactionAmount);
						} else {
							newBalance = @Model.Balance + Number(transactionAmount);
						}
						
						document.getElementById('balanceField').textContent = `Balance: ${newBalance.toFixed(2)} @(Model.CurrencyName)`;
					} else {
						alert('Somethink happened!');
					}
				}
			}
		})
	</script>
}